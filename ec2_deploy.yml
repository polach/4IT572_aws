- name: Create new EC2 instance
  hosts: localhost
  connection: local

  tasks:
    - name: Launch EC2 Instance
      ec2:
        instance_type: t2.micro
        image: ami-0022f774911c1d690
        region: us-east-1
        key_name: aws
        vpc_subnet_id: subnet-0b2209dcf1e25baf0
        assign_public_ip: yes
        wait: yes
        count: 1
        group: web
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      register: ec2
    - name: Add instance host to group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for ssh connection
      delegate_to: "{{ item.public_ip }}"
      wait_for_connection:
        delay: 30
        timeout: 300
      loop: "{{ ec2.instances }}"

    - name: Get actual instances
      ec2_instance_info:
        region: us-east-1
        aws_access_key: "{{access_key}}"
        aws_secret_key: "{{secret_key}}"
        security_token: "{{session_token}}"
      register: actual
    

- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install Git and Docker
      yum:
        name:
          - git
          - docker
        state: latest
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Start Docker on startup
      shell: systemctl enable docker
      become: yes
    - name: Set rights to Docker
      shell: usermod -a -G docker ec2-user
      become: yes
    - name: Get eshop from GIT
      git:
        repo: 'https://github.com/polach/4IT572_aws.git'
        dest: ./app
    - name: Build Docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 45
      poll: 0
      become: yes
    - wait_for:
        port:
          80

#- name: Terminate instances
#  hosts: localhost
#  connection: local
#
#  tasks:
#    - name: Terminate latest instances
#      amazon.aws.ec2:
#        region: us-east-1
#        state: 'absent'
#        instance_ids: '{{ item.instance_id }}'
#        aws_access_key: "{{access_key}}"
#        aws_secret_key: "{{secret_key}}"
#        security_token: "{{session_token}}"
#        wait: yes
#      with_items: "{{actual.instances}}"